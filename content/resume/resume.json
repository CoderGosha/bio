{
  "jobs": [
    {
      "name": "ООО Гервиг",
      "work_period": "2023",
      "site": "https://gervig.ru/",
      "post": "Руководитель группы разработки на C#",
      "work_type": "Удаленная работа",
      "descriptions": [
        {
          "description": "Проектирование и разработка ядра системы для автоматизации пищевого производства. Интеграция с аппаратным обеспечением, работа с бинарными протоколами без документации. Использование Event-driven architecture и Kafka для быстрой и надежной передачи сообщений между сервисами. Проведение code review и наставничество разработчиков. Разработка и оптимизация микросервисов, нагрузочное тестирование.",
          "technology": "ASP.NET Core, EF Core, PostgreSQL, Docker, Kafka, OpenSearch, CQRS, event-driven architecture."
        }
      ]
    },
    {
      "name": "Engy",
      "work_period": "2020-2023",
      "site": "http://www.en-gy.ru/",
      "post": "Ведущий backend-разработчик",
      "work_type": "Удаленная работа",
      "descriptions": [
        {
          "description": "Разработка высоконагруженных API (ASP .Net Core) для системы доставки посылок (постаматов) и интеграции с партнерами. Портирование ядра с ASP .NET на ASP .NET Core и разработка новых модулей. Интеграционные тесты, оптимизация скорости выполнения и потребления ресурсов.\nАктивная поддержка кода для Windows (IIS + Docker) и Linux (Nginx + Docker). Участие в создании и разработке архитектуры приложений и веб сервисов ",
          "technology": "TFS, Git.\nASP .Core, EF Core, Dapper, MSSQL, PostgreeSQL, Docker"
        },
        {
          "description": "Пилотный проект клиента для постамата (Linux) на Python с использованием QT. Реализация клиента для встраиваемой системы и ограниченными ресурсами.\nУправление ячейками, банковский процессинг, получение и выдача посылок. ",
          "technology": "Python, Sqlite, PySide, Raspberry Pi"
        }
      ]
    },
    {
      "name": "ПСС. Софтвер",
      "work_period": "2018-2020",
      "site": "http://itpss.ru/",
      "post": "Старший инженер-программист",
      "work_type": "Удалённая работа ",
      "descriptions": [
        {
          "description": "Поддержка и разработка OPC UA Server (OPC Unified Architecture. NET Standard), а также микросервисов на ASP .Core для системы продажи билетов.\nВыполнял портирование и перенос приложений на платформу .NET Core с последующим запуском на ОС Linux. На проекте используем систему непрерывной поставки кода Azure DevOps Service.",
          "technology": "TFS, Git.\nASP .Core, EF Core, MSSQL, PostgreeSQL, Docker, RabbitMQ"
        }
      ]
    },
    {
      "name": "Дата-Центр Автоматика",
      "work_period": "2014-2018",
      "site": "https://dc.ru/",
      "post": "Инженер-программист",
      "work_type": "Офис",
      "descriptions": [
        {
          "description": "Разработка производственных систем в металлургии, работающих в режиме реального времени. \nРабота с физическими устройствами, сбор данных в реальном времени, аналитика производственных процессов и разработка модулей для системы слежения за металлом. \nРазработка системы сбора данных с весоизмерительных устройств. (проектирование, реализация и внедрение) ",
          "technology": "Git, SVN\nASP.NET, EF, MVC, WCF, REST, SOAP, SQL, MS SQL, Oracle,  UnitTests, JavaScript, С#, С++, HTML, CSS "
        }
      ]
    }
  ],
  "edu": [
    {
      "name": "Череповецкий государственный университет",
      "work_period": "2009-2014 ",
      "site": "https://www.chsu.ru/",
      "post": "Инженер-программист",
      "work_type": "Обучение",
      "descriptions": [
        {
          "description": "Программное обеспечение вычислительной техники и автоматизированных систем",
          "result": "ВКР: Data Scales - система сбора информации с весоизмерительных устройств и контроллеров"
        }
      ]
    }
  ],
  "skills": [
    {
      "name": "C#",
      "index": 1,
      "data": [
        ".NET Core",
        "EF Core",
        "Dapper",
        "SQL",
        "Миграция .NET Framework -> .NET Core",
        "Web API",
        "Swagger/Open api",
        "async/await",
        "RabbitMQ",
        "Andriod",
        "Smart Watch"
      ]
    },
    {
      "name": "Python",
      "index": 2,
      "data": [
        "Django",
        "Django-rest",
        "Web Api",
        "WebSocket",
        "asyncio",
        "QT",
        "Selenuim"
      ]
    },
    {
      "name": "Database",
      "index": 3,
      "data": [
        "Oracle Database",
        "MSSQL",
        "PostgreSQL",
        "MongoDB",
        "SQLite"
      ]
    },
    {
      "name": "CI/CD",
      "index": 4,
      "data": [
        "Docker",
        "Docker Compose",
        "TFS",
        "GitHub",
        "Gogs/Drone"
      ]
    },
    {
      "name": "Hardware & virtualization",
      "index": 5,
      "data": [
        "DigitalOcean",
        "Azure",
        "VirtualBox",
        "Embedded Systems (Raspberry Pi, ТСД)",
        "Garmin Watch (Monkey C)"
      ]
    },
    {
      "name": "Languages",
      "index": 6,
      "data": [
        "Russian native",
        "English B2"
      ]
    }
  ]
}